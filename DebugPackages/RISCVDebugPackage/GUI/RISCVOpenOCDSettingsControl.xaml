<UserControl x:Class="RISCVDebugPackage.GUI.RISCVOpenOCDSettingsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RISCVDebugPackage.GUI"
             xmlns:bspe="clr-namespace:BSPEngine;assembly=BSPEngine"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:coll="clr-namespace:System.Collections;assembly=mscorlib"
             xmlns:pkg="clr-namespace:RISCVDebugPackage"
             mc:Ignorable="d" 
             >
    <UserControl.Resources>
        <Border Style="{DynamicResource VsBrandedUIBorderStyle}" x:Key="interfaceScriptSelectionControl" Loaded="HackPopupDataContext">
            <Grid DataContext="{Binding Path=DataContext.Interface}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <CheckBox IsChecked="{Binding Path=ShowScripts}" VerticalContentAlignment="Center" VerticalAlignment="Center" Margin="0 5 5 5" Grid.Column="0">
                    <TextBlock Text="Show raw OpenOCD scripts" Margin="0"/>
                </CheckBox>
                <Button Style="{DynamicResource HyperlinkButton}" Click="SelectScriptManually" HorizontalAlignment="Left" Margin="0 0 5 5" Grid.Column="1">
                    <StackPanel Orientation="Horizontal">
                        <Image Width="16" Height="16" Source="icons/open16.png"/>
                        <TextBlock Text="Browse..." VerticalAlignment="Center" Margin="3 0 0 0"/>
                    </StackPanel>
                </Button>
            </Grid>
        </Border>
        <Border Style="{DynamicResource VsBrandedUIBorderStyle}" x:Key="deviceScriptSelectionControl" Loaded="HackPopupDataContext">
            <Grid DataContext="{Binding Path=DataContext.Device}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <CheckBox IsChecked="{Binding Path=ShowScripts}" VerticalContentAlignment="Center" VerticalAlignment="Center" Margin="0 5 5 5" Grid.Column="0">
                    <TextBlock Text="Show raw OpenOCD scripts" Margin="0"/>
                </CheckBox>
                <Button Style="{DynamicResource HyperlinkButton}" Click="SelectScriptManually" HorizontalAlignment="Left" Margin="0 0 5 5" Grid.Column="1">
                    <StackPanel Orientation="Horizontal">
                        <Image Width="16" Height="16" Source="icons/open16.png"/>
                        <TextBlock Text="Browse..." VerticalAlignment="Center" Margin="3 0 0 0"/>
                    </StackPanel>
                </Button>

                <Button Style="{DynamicResource HyperlinkButton}" Click="ResetToDefaultDevice" HorizontalAlignment="Left" Margin="0 0 5 5" Grid.Column="2" ToolTip="Reset to auto-detected device">
                    <Image Width="16" Height="16" Source="icons/reset16.png"/>
                </Button>

            </Grid>
        </Border>
        <local:ShowOnlyInListViewConverter x:Key="showOnlyInListViewConverter"/>
        <local:MaxWidthConverter x:Key="MaxWidthConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.Resources>
            <Style TargetType="TextBlock" BasedOn="{StaticResource ResourceKey={x:Type TextBlock}}">
                <Setter Property="Margin" Value="5"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <Style TargetType="ComboBox" BasedOn="{StaticResource ResourceKey={x:Type ComboBox}}">
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <Style TargetType="TextBox" BasedOn="{StaticResource ResourceKey={x:Type TextBox}}">
                <Setter Property="Padding" Value="0 1 0 1"/>
            </Style>

            <Style TargetType="ListBox" BasedOn="{StaticResource ResourceKey={x:Type ListBox}}">
                <Style.Setters>
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Style.Setters>
            </Style>
            <Thickness x:Key="TableElementMargin">0 2 0 2</Thickness>
            <Thickness x:Key="SubSettingMargin">10 0 0 0</Thickness>
            <Visibility x:Key="Collapsed">Collapsed</Visibility>
        </Grid.Resources>

        <TextBlock Text="Programming interface:" Grid.Row="0" Visibility="{Binding InterfaceSelectorVisibility}"/>
        <ContentControl Grid.Row="0" Grid.Column="1" Margin="{StaticResource TableElementMargin}" Visibility="{Binding InterfaceSelectorVisibility}">
            <ContentControl DataContext="{Binding Interface}">
                <ComboBox ItemsSource="{Binding Items}" SelectedItem="{Binding SelectedItem}" x:Name="InterfaceComboBox" Visibility="{Binding InterfaceSelectorVisibility}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Image Width="16" Height="16" Margin="0 0 5 0">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Entry}" Value="{x:Null}">
                                                    <Setter Property="Source" Value="icons/script16.png"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Script}" Value="{x:Null}">
                                                    <Setter Property="Source" Value="icons/excl16.png"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                            <Setter Property="Source" Value="icons/usb16.png"/>
                                        </Style>
                                    </Image.Style>
                                </Image>
                                <TextBlock Text="{Binding}" VerticalAlignment="Center" Grid.Column="1" Margin="0"/>
                                <TextBlock Text="{Binding ScriptHint}" Opacity="0.5" VerticalAlignment="Center" Grid.Column="2" Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource showOnlyInListViewConverter}}"/>
                            </Grid>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </ContentControl>
        </ContentControl>

        <CheckBox VerticalAlignment="Center" VerticalContentAlignment="Center" Margin="{StaticResource SubSettingMargin}" Grid.Row="1" Visibility="{Binding ExplicitFrequencyVisibility}" IsChecked="{Binding ExplicitFrequencyEnabled}" x:Name="cbExplicitFrequency">
            <TextBlock Text="Set JTAG frequency to:"/>
        </CheckBox>
        <Grid Grid.Row="1" Grid.Column="1" Margin="{StaticResource TableElementMargin}" Visibility="{Binding ExplicitFrequencyVisibility}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBox Text="{Binding ExplicitFrequencyValue}" IsEnabled="{Binding IsChecked, ElementName=cbExplicitFrequency, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center"/>
            <TextBlock Text="KHz" Grid.Column="1"/>
        </Grid>

        <TextBlock Text="Debugged device:" Grid.Row="2"/>
        <ContentControl Grid.Row="2" Grid.Column="1" Margin="{StaticResource TableElementMargin}" DataContext="{Binding Device}">
            <ComboBox ItemsSource="{Binding Items}" SelectedItem="{Binding SelectedItem}" x:Name="DeviceComboBox">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Image Width="16" Height="16" Margin="0 0 5 0">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Entry}" Value="{x:Null}">
                                                <Setter Property="Source" Value="icons/script16.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Script}" Value="{x:Null}">
                                                <Setter Property="Source" Value="icons/excl16.png"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="Source" Value="icons/chip16.png"/>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <TextBlock Text="{Binding}" VerticalAlignment="Center" Grid.Column="1" Margin="0"/>
                            <TextBlock Text="{Binding ScriptHint}" Opacity="0.5" VerticalAlignment="Center" Grid.Column="2" Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource showOnlyInListViewConverter}}"/>
                        </Grid>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </ContentControl>


        <ContentControl Grid.Row="3" Grid.ColumnSpan="2" Margin="{StaticResource TableElementMargin}" Visibility="{Binding Path=EditableTargetScript.ResetVisibility, FallbackValue={StaticResource Collapsed}}">
            <CheckBox VerticalContentAlignment="Center" Margin="{StaticResource SubSettingMargin}" IsChecked="{Binding ConnectUnderReset}">
                <TextBlock Text="Connect under reset (required if the firmware enters sleep state)"/>
            </CheckBox>
        </ContentControl>

        <!--
        <CheckBox Margin="5 2 0 2" Grid.Row="7" Grid.ColumnSpan="2" VerticalContentAlignment="Center" IsChecked="{Binding CommandLineReset}" Visibility="{Binding CommandLineResetVisibility}">
            <TextBlock Text="Issue an explicit reset command via command line"/>
        </CheckBox>-->

        <TextBlock Text="Reset mode" Grid.Row="6"/>
        <ListBox Grid.Row="6" Grid.Column="1" SelectedItem="{Binding Settings.ResetMode}" Margin="{StaticResource TableElementMargin}">
            <ListBox.ItemsSource>
                <coll:ArrayList>
                    <pkg:RISCVResetMode>nSRST</pkg:RISCVResetMode>
                    <pkg:RISCVResetMode>Manual</pkg:RISCVResetMode>
                </coll:ArrayList>
            </ListBox.ItemsSource>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock>
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding}" Value="nSRST">
                                        <Setter Property="Text" Value="Automatically (nSRST)"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding}" Value="Manual">
                                        <Setter Property="Text" Value="Manually (reset button)"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:RISCVOpenOCDSettingsControl}}"/>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Grid Grid.Row="7" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Image Width="16" Height="16" Source="icons/bulb16.png"/>
            <TextBlock Grid.Column="1" TextWrapping="Wrap" Text="Try using manual reset mode if the firmware doesn't start after programming."/>
        </Grid>

        <TextBlock Text="Program FLASH memory:" Grid.Row="8" Visibility="{Binding ProgramOptionVisibility}"/>
        <ListBox Grid.Row="8" Grid.Column="1" SelectedItem="{Binding ProgramMode}" Margin="{StaticResource TableElementMargin}"  Visibility="{Binding ProgramOptionVisibility}">
            <ListBox.ItemsSource>
                <coll:ArrayList>
                    <bspe:ProgramMode>Enabled</bspe:ProgramMode>
                    <bspe:ProgramMode>Disabled</bspe:ProgramMode>
                    <bspe:ProgramMode>Auto</bspe:ProgramMode>
                </coll:ArrayList>
            </ListBox.ItemsSource>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock>
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding}" Value="Enabled">
                                        <Setter Property="Text" Value="Always"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding}" Value="Disabled">
                                        <Setter Property="Text" Value="Never"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding}" Value="Auto">
                                        <Setter Property="Text" Value="If rebuilt since last load"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:RISCVOpenOCDSettingsControl}}"/>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <!--
        <TextBlock Text="Reset device:" Grid.Row="9"/>
        <StackPanel Orientation="Horizontal" Grid.Row="9" Grid.Column="1" Margin="{StaticResource TableElementMargin}">
            <CheckBox VerticalContentAlignment="Center" Margin="0 0 5 0" IsChecked="{Binding ResetBeforeProgramming}" >
                <TextBlock Text="Before programming" Margin="0"/>
            </CheckBox>
            <CheckBox VerticalContentAlignment="Center" Margin="5 0 0 0" IsChecked="{Binding ResetAfterProgramming}">
                <TextBlock Text="After programming" Margin="0"/>
            </CheckBox>
        </StackPanel>
-->
        <Expander Grid.ColumnSpan="2" MinHeight="64" Grid.Row="10" Header="Advanced settings" IsExpanded="False">
            <Grid MinHeight="80" Margin="20 0 5 5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*" MinHeight="80"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="Command line:" Margin="2"/>
                <TextBox Margin="2" Text="{Binding CommandLine, UpdateSourceTrigger=LostFocus}" Grid.Column="0" Grid.Row="1" 
                         AcceptsReturn="False" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" VerticalAlignment="Stretch" 
                         MaxWidth="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:RISCVOpenOCDSettingsControl}}, Converter={StaticResource MaxWidthConverter}}"/>

                <TextBlock Text="Startup GDB commands:" Margin="2" Grid.Column="1"/>
                <TextBox Margin="2" Grid.Column="1" Text="{Binding StartupCommands, UpdateSourceTrigger=LostFocus}" Grid.Row="1" AcceptsReturn="True" TextWrapping="NoWrap" VerticalScrollBarVisibility="Auto" VerticalAlignment="Stretch" HorizontalScrollBarVisibility="Auto"/>

            </Grid>
        </Expander>

    </Grid>

</UserControl>
